#Copyright 2023, Battelle Energy Alliance, LLC

import sys
import json
import time
import datetime
 
#Add Missing Objects
def missingChecker(bundle):

    objectList = []
    refList = []
    missingList = []

    for object in bundle['objects']:
        if object['type'] != 'relationship':
            objectList.append(object['id'])
        else:
            refList.append(object['source_ref'])
            refList.append(object['target_ref'])
    
    objectList = set(objectList)
    refList = set(refList)
    
    missingList = list(refList - objectList)
    
    STIX_TIME = datetime.datetime.utcfromtimestamp(int(time.time())).strftime('%Y-%m-%dT%H:%M:%S.%fZ')
    
    for id in missingList:
        STIXObject = {
                "type": id.split('--')[0],
                "spec_version": "2.1",
                "id": id,
                "created": STIX_TIME,
                "modified": STIX_TIME,
                "name": id.split('--')[0] + ' : AutoGenerated'
                }
        
        bundle['objects'].append(STIXObject)
        print("   Missing Object " + id + " created and temporary values added.")

#------------------------------------------------------------------------------

#Startup
print('Missing Object Fixer...')

#Check arguments
try:
    bundle_input = sys.argv[1]
    bundle_output = sys.argv[2]
    bundleCheck = sys.argv[3]
    
except:
    print('Argument Missing')
    sys.exit()
    
    
#Load json files
if bundleCheck == "0":
    with open(bundle_input, 'r', encoding='utf-8', errors='replace') as f:
        bundle = json.load(f)
else:
    with open(bundle_output, 'r', encoding='utf-8', errors='replace') as f:
        bundle = json.load(f)

missingChecker(bundle)

#Save new json bundle
outFile = open(bundle_output, 'w')
outFile.write(json.dumps(bundle))
outFile.close()

print('Missing Object Fixer...Done')
